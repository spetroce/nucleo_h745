set(MCU_CORE "CM4") # This is the name of a directory (CM4 or CM7)
set(MCU_FAMILY "STM32H7xx")
set(MCU_LINKER_SCRIPT "${CMAKE_CURRENT_LIST_DIR}/STM32H745ZITX_FLASH.ld")
set(MCU_STARTUP_SCRIPT "${CMAKE_CURRENT_LIST_DIR}/Core/Startup/startup_stm32h745zitx.s")

file(GLOB_RECURSE USER_SOURCES "${CMAKE_CURRENT_LIST_DIR}/Core/Src/*.c")
file(GLOB_RECURSE DRIVER_SOURCES "${CMAKE_SOURCE_DIR}/Drivers/*.c")
file(GLOB_RECURSE COMMON_SOURCES "${CMAKE_SOURCE_DIR}/Common/Src/*.c")
set(MIDDLEWARE_SOURCES "")
if(EXISTS "${CMAKE_SOURCE_DIR}/Middlewares")
  file(GLOB_RECURSE MIDDLEWARE_SOURCES
    "${CMAKE_SOURCE_DIR}/Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Src/*.c"
    "${CMAKE_SOURCE_DIR}/Middlewares/ST/STM32_USB_Device_Library/Core/Src/*.c")
endif()
set(SOURCES ${USER_SOURCES}
            ${MCU_STARTUP_SCRIPT}
            ${DRIVER_SOURCES}
            ${COMMON_SOURCES}
            ${MIDDLEWARE_SOURCES})

include_directories("${CMAKE_CURRENT_LIST_DIR}/Core/Inc")
include_directories("${CMAKE_SOURCE_DIR}/Drivers/CMSIS/Device/ST/${MCU_FAMILY}/Include")
include_directories("${CMAKE_SOURCE_DIR}/Drivers/CMSIS/Include")
include_directories("${CMAKE_SOURCE_DIR}/Drivers/${MCU_FAMILY}_HAL_Driver/Inc")
include_directories("${CMAKE_SOURCE_DIR}/Drivers/${MCU_FAMILY}_HAL_Driver/Inc/Legacy")
if(EXISTS "${CMAKE_SOURCE_DIR}/Middlewares")
  include_directories("${CMAKE_SOURCE_DIR}/Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc")
  include_directories("${CMAKE_SOURCE_DIR}/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
endif()
include_directories("${CMAKE_SOURCE_DIR}/Common/Inc")

set(TOOLCHAIN_PREFIX arm-none-eabi-)
set(CMAKE_C_COMPILER ${TOOLCHAIN_PREFIX}gcc)
set(CMAKE_ASM_COMPILER ${CMAKE_C_COMPILER})
set(CMAKE_CXX_COMPILER ${TOOLCHAIN_PREFIX}g++)
set(CMAKE_OBJCOPY ${TOOLCHAIN_PREFIX}objcopy)
set(CMAKE_SIZE_UTIL ${TOOLCHAIN_PREFIX}size)

# The definitions and flags below were copied from .mk files generated by an STM32CubeIDE version of this project.
add_definitions(-DUSE_HAL_DRIVER)
add_definitions(-DCORE_CM4)
add_definitions(-DSTM32H745xx)

set(COMMON_FLAGS "-mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -mthumb")
set(CMAKE_C_FLAGS "${COMMON_FLAGS} -ffunction-sections -fdata-sections -Wall -fstack-usage") # dont use -std=gnu11 or -fcyclomatic-complexity
set(CMAKE_ASM_FLAGS "${COMMON_FLAGS} -c -x assembler --specs=nano.specs") # use '-x assembler' instead of '-x assembler-with-cpp'
set(CMAKE_C_FLAGS_RELEASE "-O3")
set(CMAKE_C_FLAGS_DEBUG "-Og -g3 -DDEBUG") # use '-Og' instead of '-O0'
set(CMAKE_EXE_LINKER_FLAGS "${COMMON_FLAGS} -T${MCU_LINKER_SCRIPT} --specs=nosys.specs -Wl,-Map=${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME_LOWER}.map -Wl,--gc-sections -static --specs=nano.specs -Wl,--start-group -lc -lm -Wl,--end-group")
set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS "")
set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS "")

string(TOLOWER ${MCU_CORE} MCU_CORE_LOWER)
set(ELF_TARGET_NAME "${PROJECT_NAME_LOWER}_${MCU_CORE_LOWER}.elf")
set(BIN_FILE_NAME "${PROJECT_NAME_LOWER}_${MCU_CORE_LOWER}.bin")
set(HEX_FILE_NAME "${PROJECT_NAME_LOWER}_${MCU_CORE_LOWER}.hex")

add_executable("${ELF_TARGET_NAME}" ${SOURCES})

set(BIN_DIR ${CMAKE_CURRENT_BINARY_DIR})
add_custom_command(
  TARGET ${ELF_TARGET_NAME}
  POST_BUILD
  COMMAND ${CMAKE_OBJCOPY} -Obinary "${BIN_DIR}/${ELF_TARGET_NAME}" "${BIN_DIR}/${BIN_FILE_NAME}"
  COMMAND ${CMAKE_OBJCOPY} -Oihex "${BIN_DIR}/${ELF_TARGET_NAME}" "${BIN_DIR}/${HEX_FILE_NAME}"
  COMMENT "Generating binary file ${BIN_FILE_NAME} and hex file ${HEX_FILE_NAME} from ${ELF_FILE_NAME}")

# install(FILES "${BIN_DIR}/${HEX_FILE_NAME}" DESTINATION "/run/media/$ENV{USER}/NOD_H745ZIQ")
